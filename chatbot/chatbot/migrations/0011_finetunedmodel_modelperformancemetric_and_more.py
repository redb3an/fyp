# Generated by Django 5.2.1 on 2025-07-12 09:20

import django.db.models.deletion
import uuid
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    dependencies = [
        ('chatbot', '0010_add_soft_delete_fields'),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='FineTunedModel',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('model_name', models.CharField(max_length=255, unique=True)),
                ('groq_model_id', models.CharField(blank=True, help_text='Groq model ID', max_length=255)),
                ('groq_job_id', models.CharField(blank=True, help_text='Groq fine-tuning job ID', max_length=255)),
                ('base_model', models.CharField(default='llama3-8b-8192', max_length=100)),
                ('status', models.CharField(choices=[('training', 'Training'), ('ready', 'Ready'), ('deployed', 'Deployed'), ('failed', 'Failed'), ('archived', 'Archived')], default='training', max_length=20)),
                ('trained_tokens', models.PositiveIntegerField(default=0)),
                ('training_examples', models.PositiveIntegerField(default=0)),
                ('validation_loss', models.FloatField(blank=True, null=True)),
                ('training_accuracy', models.FloatField(blank=True, null=True)),
                ('is_active', models.BooleanField(default=False, help_text='Whether this model is currently active')),
                ('deployment_date', models.DateTimeField(blank=True, null=True)),
                ('last_used', models.DateTimeField(blank=True, null=True)),
                ('usage_count', models.PositiveIntegerField(default=0)),
                ('version', models.CharField(default='1.0', max_length=20)),
                ('description', models.TextField(blank=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
            ],
            options={
                'db_table': 'chatbot_fine_tuned_model',
                'ordering': ['-created_at'],
            },
        ),
        migrations.CreateModel(
            name='ModelPerformanceMetric',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('metric_type', models.CharField(choices=[('accuracy', 'Accuracy'), ('response_time', 'Response Time'), ('user_satisfaction', 'User Satisfaction'), ('relevance_score', 'Relevance Score'), ('engagement_rate', 'Engagement Rate')], max_length=20)),
                ('value', models.FloatField()),
                ('measurement_date', models.DateTimeField(auto_now_add=True)),
                ('context', models.JSONField(default=dict, help_text='Additional context for the metric')),
            ],
            options={
                'db_table': 'chatbot_model_performance_metric',
                'ordering': ['-measurement_date'],
            },
        ),
        migrations.RenameIndex(
            model_name='conversation',
            new_name='chatbot_con_deleted_636d9f_idx',
            old_name='chatbot_conversation_deleted_at_idx',
        ),
        migrations.RenameIndex(
            model_name='message',
            new_name='chatbot_mes_deleted_674a49_idx',
            old_name='chatbot_message_deleted_at_idx',
        ),
        migrations.AddField(
            model_name='finetunedmodel',
            name='created_by',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to=settings.AUTH_USER_MODEL),
        ),
        migrations.AddField(
            model_name='finetunedmodel',
            name='training_record',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='fine_tuned_models', to='chatbot.chatbottraining'),
        ),
        migrations.AddField(
            model_name='modelperformancemetric',
            name='model',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='performance_metrics', to='chatbot.finetunedmodel'),
        ),
        migrations.AddIndex(
            model_name='finetunedmodel',
            index=models.Index(fields=['status', '-created_at'], name='chatbot_fin_status_82bf8f_idx'),
        ),
        migrations.AddIndex(
            model_name='finetunedmodel',
            index=models.Index(fields=['is_active', '-created_at'], name='chatbot_fin_is_acti_99bac8_idx'),
        ),
        migrations.AddIndex(
            model_name='finetunedmodel',
            index=models.Index(fields=['groq_model_id'], name='chatbot_fin_groq_mo_5bb0ac_idx'),
        ),
        migrations.AddIndex(
            model_name='finetunedmodel',
            index=models.Index(fields=['groq_job_id'], name='chatbot_fin_groq_jo_849c1a_idx'),
        ),
        migrations.AddIndex(
            model_name='modelperformancemetric',
            index=models.Index(fields=['model', 'metric_type', '-measurement_date'], name='chatbot_mod_model_i_bc2f94_idx'),
        ),
    ]
